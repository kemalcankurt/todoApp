name: Build, Test, and Validate Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  dotnet-tests:
    name: Run .NET Tests and Generate Coverage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --logger trx

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        run: reportgenerator -reports:**/TestResults/**/*.xml -targetdir:coverage -reporttypes:HtmlInline_AzurePipelines

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  integration-tests:
    name: Run Integration & Playwright Tests
    runs-on: ubuntu-latest
    needs: dotnet-tests # Runs only if .NET tests pass

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (Installs Docker Compose)
        uses: docker/setup-buildx-action@v3

      - name: Start Docker Compose Services
        run: docker compose up -d

      - name: Monitor Playwright Test Execution
        run: |
          echo "Waiting for Playwright tests to finish..."
          docker logs -f playwright-tests

      - name: Upload Playwright HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: tests/playwright/test-results/html-report

      - name: Tear Down Docker Environment
        run: docker compose down
